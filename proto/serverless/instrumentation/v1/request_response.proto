syntax = "proto3";

package serverless.instrumentation.v1;

import "serverless/instrumentation/tags/v1/tags.proto";

option go_package = ".;protoc";

// RequestResponse is the AWS Lambda Event and Response Data.
// In the Serverless Platform there will be two of these payloads
// One for Event payload and then one for the payload returned at the end of
// the function invocation.
message RequestResponse {
  reserved 5, 6;
  reserved "data", "request_data", "response_data";

  // The Global Serverless Platform Tags
  serverless.instrumentation.tags.v1.SlsTags sls_tags = 1;
  // The trace Id of the invocation
  optional bytes trace_id = 2;
  // The span id of the root Lambda Span that request data is attached to on ingest.
  optional bytes span_id = 3;
  // The Lambda Request Id.
  optional string request_id = 4;

  // JSON string of the request or the response body
  // In case of response may be omited if lambda resolved with no value
  optional string body = 11;

  enum Origin {
    // Not disclosed (not applicable as property is required)
    ORIGIN_UNSPECIFIED = 0;
    // Function request event
    ORIGIN_REQUEST = 1;
    // Function handler response
    ORIGIN_RESPONSE = 2;
  }
  // Type of body
  Origin origin = 12;

  // A message containing any number of Tagsets
  optional serverless.instrumentation.tags.v1.Tags tags = 7;

  // Is historical is addedd via ingestion so that we can tell the differnce between
  // historical payloads and live streamed payloads
  optional bool is_historical = 8;

  // Type is used to determine the kind of document that is being send via a livestream
  optional string type = 9;

  // The timestamp of when the req/res data was generated.
  optional fixed64 timestamp = 10;
}
