syntax = "proto3";

package serverless.instrumentation.v1;

import "serverless/instrumentation/tags/v1/tags.proto";

option go_package = ".;protoc";

// A LogPayload is a message that will contain any number of
// LogEvents plus the global tags required by our Serverless Ingest Platform.
message LogPayload {
    serverless.instrumentation.tags.v1.SlsTags sls_tags = 1;

    // A list of LogEvents to be ingested. Ingest does not impose a limit on the
    // number of LogEvents in a single payload. It is the responsibility of
    // the LogEvents' producers to limit the size of payloads based on their
    // own requirements.
    repeated LogEvent log_events = 2;
}

message LogEvent {
    reserved 1, 3, 4, 5, 6, 7;
    reserved "message", "sequence_id", "log_group", "log_stream", "account_id", "request_id";

    // The timestamp of when the LogEvent was created.
    fixed64 timestamp = 2;

    // The Trace Id that the log's are linked to.
    // When ingesting LogEvents, ingest will attempt to infer
    // the request_id from the payload and attach it. If it is not
    // able to, then it will attempt to reconcile later.
    optional string trace_id = 8;

    // The LogEvent's body.
    string body = 9;

    // The calculated severity text value for a log
    string severity_text = 10;

    // The calculated severity text value for a log
    uint64 severity_number = 11;

    // A message containing any number of Tagsets
    optional serverless.instrumentation.tags.v1.Tags tags = 12;
}
