syntax = "proto3";

package serverless.instrumentation.v1;

import "serverless/instrumentation/v1/trace.proto";
import "serverless/instrumentation/v1/request_response.proto";

option go_package = ".;protoc";

// A DevMode Payload is a message that will contain reqRes data or span data
// that is forwarded to ingest via the internal extension
message DevModePayload {
  // The AWS Account ID where this payload originated from
  string account_id = 1;
  // The AWS Region where this payload originated from
  string region = 2;
  // The lambda request id where this payload originated from
  string request_id = 3;

  // Extracted Lambda Telemetry API data
  optional LambdaTelemetry telemetry = 6;

  oneof payload {
    // The set of lambda traces that were generated via an internal extension
    TracePayload trace = 4;
    // The req or response data from the instrumented lambda function
    RequestResponse request_response = 5;
  }
}

// Lambda Telemetry API data. This data is only available for lambda functions that
// have access to the telemetry API so it will not be included in all regions.
message LambdaTelemetry {
  // Init duration in milliseconds as reported by the metrics on the platform.initReport event
  optional uint32 init_duration_ms = 1;
  // Internal runtime duration in milliseconds as reported by the metrics on the platform.runtimeDone event
  optional uint32 internal_duration_ms = 2;
  // Internal runtime duration in milliseconds as reported by the responseLatency span on the platform.runtimeDone event
  optional uint32 internal_response_latency_ms = 3;
}
